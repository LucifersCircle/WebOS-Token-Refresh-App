name: Build, Generate Manifest, and Release IPK

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js for ares-cli
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'

      # Install ares-cli
      - name: Install ares-cli
        run: |
          npm install -g @webosose/ares-cli

      # Download and install manifest generator
      - name: Download and install manifest generator
        run: |
          wget https://github.com/webosbrew/dev-toolbox-cli/releases/download/v20241107-10c727a/webosbrew-toolbox-gen-manifest_0.1.4-1_amd64.deb
          dpkg-deb -x webosbrew-toolbox-gen-manifest_0.1.4-1_amd64.deb manifest-tool
          chmod +x manifest-tool/usr/bin/webosbrew-gen-manifest

      # Build IPK package
      - name: Build IPK
        run: |
          ares-package ./src/app ./src/service

      # Extract version from appinfo.json
      - name: Get version
        id: version
        run: |
          version=$(jq -r '.version' src/app/appinfo.json)
          echo "VERSION=$version" >> $GITHUB_ENV

      # Generate manifest.json
      - name: Generate manifest.json
        run: |
          ./manifest-tool/usr/bin/webosbrew-gen-manifest \
            --pkgfile ./com.pirate.refresh_${{ env.VERSION }}_all.ipk \
            --icon https://raw.githubusercontent.com/LucifersCircle/WebOS-Token-Refresh-App/df2ddd0d429e86b024777f9be762e242e8eb1106/src/app/icon.png \
            --link https://github.com/LucifersCircle/WebOS-Token-Refresh-App/releases/download/v${{ env.VERSION }}/com.pirate.refresh_${{ env.VERSION }}_all.ipk \
            --output manifest.json \
            --root false \
            --verbose

      # Create release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: WebOS Token Refresh v${{ env.VERSION }}
          draft: false
          prerelease: false

      # Upload the IPK to the release
      - name: Upload IPK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./com.pirate.refresh_${{ env.VERSION }}_all.ipk
          asset_name: com.pirate.refresh_${{ env.VERSION }}_all.ipk
          asset_content_type: application/octet-stream

      # Upload manifest.json to the release
      - name: Upload manifest.json to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifest.json
          asset_name: manifest.json
          asset_content_type: application/json
